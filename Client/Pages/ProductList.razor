@using BlazorAppEcommerce.Shared
@using UNet7BlazorAppEcomm.Shared
@inject HttpClient client

@inject IProductService service

@if ( service.Products == null || service.Products.Count == 0)
{
    <div>Loading ...</div>
}
else {
    <ul class="list-unstyle">
        @foreach (var product in service.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/product/@product.Id">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                        }

                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">
                        $@product.Price
                    </h5>
                </div>
            </li>
        }
    </ul>
}


@code {
    private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        // var result = await client.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/product");
        // if (result != null )
        //     Products = result.Data;
        await service.GetProducts();
       
    }
}
